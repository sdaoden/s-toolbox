#!/bin/sh -
#@ Like shar(1), but with an uuencode(1)/uudecode(1) binary safe layer added.
#@ Member compression via optional --(compress|gzip|bzip2|xz) argument.
#@ Web: https://www.sdaoden.eu/code.html
#@ Git: https?://git.sdaoden.eu/cgit/s-toolbox.git
#
# Copyright (c) 2012 - 2018 Steffen (Daode) Nurpmeso <steffen@sdaoden.eu>.
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

if [ ${#} -eq 0 ]; then
   echo 'usage: uushar [-(Z|z|J|j)] file ...'
   exit 1
fi

x_Z='compress -cf'
ux_Z='uncompress -cf'
x_z='gzip -cf'
ux_z='gzip -cdf'
x_J='xz -cf'
ux_J='xz -cdf'
x_j='bzip2 -cf'
ux_j='bzip2 -cdf'

case ${1} in
-*)
   i=`echo $1 | sed 's/^-//'`
   eval cfun='${x_'${i}'}'
   eval xfun='${ux_'${i}'}'
   if [ -z "${cfun}" ]; then
      echo >&2 "Unsupported compression method: ${1}"
      exit 1
   fi
   shift
   ;;
*)
   cfun= xfun= 
   ;;
esac

cat << \!
# This is a shell archive.  Save it in a file, remove anything before
# this line, and then unpack it by entering "sh file".  Note, it may
# create directories; files and directories will be owned by you and
# have default permissions.
#
# Archives produced using this implementation of uushar may be easily
# examined with the command:
#  $ grep '^[^X#]' shell-archive
#
# This archive contains:
!

for i
do
   if { j=${i}; echo ${j}; } | grep -q '"'; then
      echo >&2 "Double-quotes in filenames are unsupported: ${i}"
      exit 1
   fi
   echo "#  ${i}"
done
echo '#'

for i
do
   if [ -d "${i}" ]; then
      echo "echo c - ${i}"
      echo "mkdir -p \"${i}\" > /dev/null 2>&1"
   elif [ -z "$cfun" ]; then
      echo "echo x - ${i}"
      echo "sed 's/^X//' << \! | uudecode -o /dev/stdout > \"${i}\""
      < "${i}" uuencode -m /dev/stdout | sed 's/^/X/'
      echo '!'
   else
      echo "echo xx - ${i}"
      echo "sed 's/^X//' << \! | uudecode -o /dev/stdout | ${xfun} > \"${i}\""
      < "${i}" ${cfun} | uuencode -m /dev/stdout | sed 's/^/X/'
      echo '!'
   fi
done
echo exit
echo

exit
# s-it-mode
