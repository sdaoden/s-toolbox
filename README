A repo of some small tools
==========================

uushar:
   Writes a sh(1) shell script to the standard output which will
   recreate the file hierarchy specified by the command line operands.
   Directories will be recreated and must be specified before the files
   they contain.  Compared to the well-known shar(1) program, uushar
   adds optional compression and an uuencode(1)/uudecode(1) binary
   safe layer::

      $ uushar [--(compress|gzip|bzip2|xz)] file ...

   It is easy to insert trojan horses into uushar files.  It is thus
   strongly recommended that all shell archive files be examined before
   running them through sh(1).  Archives produced using this
   implementation of uushar may be easily examined with the command::

      $ grep '^[^X#]' shar.file

   Note that the uudecode(1) program must be capable of decoding to
   /dev/stdout, i.e., it must be POSIX compliant (Issue 6 iirc).

gen-uushar-wrapper:
   Creates a shell archive similar to uushar as above, except that the
   archive (1) consists only of executable file members, and (2) will
   be itself executable.  Run it (the generated shell archive script)
   to invoke any of the programs contained therein.  On the first run,
   the wrapper will create a hidden directory in your $TMPDIR to unpack
   the archive members therein.  (Run without arguments to show its
   contents and the creation date.)

   Note that the uudecode(1) program must be capable of decoding to
   /dev/stdout, i.e., it must be POSIX compliant (Issue 6 iirc).

real-periodic.sh:
   A *real* periodic for FreeBSD, NetBSD and OpenBSD that ensures that
   the daily/weekly/monthly maintenance stuff is executed, even if
   your laptop is running only one hour a day.  Invoke this once per
   hour in the roots crontab and disable the usual periodic stuff of
   your system instead.  E.g., on my NetBSD 6.0 box (lines wrapped)::

      # do daily/weekly/monthly maintenance
      15 * * * * /usr/bin/nice -n 15 /usr/libexec/real-periodic.sh
      #15 3 * * * /bin/sh /etc/daily 2>&1 | \
        tee /var/log/daily.out | sendmail -t
      #30 4 * * 6 /bin/sh /etc/weekly 2>&1 | \
        tee /var/log/weekly.out | sendmail -t
      #30 5 1 * * /bin/sh /etc/monthly 2>&1 | \
        tee /var/log/monthly.out | sendmail -t

git-topic-creator.pl:
   To ease maintaining of topic branches i use a linear history, so
   that i can use ``$ git rebase -i`` for fixups and squashes, without
   having to worry about recreation of topic branches.  Instead i tag
   commit messages, and use this script to create the topics once i'm
   finished.  Read the --help output for more, and make use of verbosity
   when you use it first.

git-pre-commit.sh:
   git(1)'s diff --check does unfortunately not offer a mode which
   detects NBSP (non-breaking space, U+00A0) characters.
   This is a real problem for keyboards (layouts) which produce combined
   sequences, i.e., the german keyboard produces NBSP for ALT+SPC, but
   it also requires ALT to get any of []|{} (ALT+[5-9]).  So NBSPs
   happen.  This script can be used as (a template for a custom)
   pre-commit hook, especially since i've looked at it, 2013-02-11 ,

   It also handles non-space indentations, tabulators and mixed indents,
   dependent on the environment variables NSPACEINDENT, TABINDENT and
   MIXINDENT.  E.g., this is one of my pre-commit hooks::

      #!/bin/sh -
      NSPACEINDENT=1 TABINDENT=1
      export NSPACEINDENT TABINDENT
      exec "$HOME/usr/bin/git-pre-commit.sh" "$@"

s-ws-check.pl:
   Check indentation, trailing whitespace and non-breaking spaces (see
   git-pre-commit.sh above) for all files given on the command line.
   Sufficient for a needed quick-n-dirty check of some random file;
   especially since i've looked at it, 2013-02-11 ,

arena-manager:
   Offers some automatized operations on revision control repositories,
   like updating, (fast-forward) merging, garbage-collecting.

Even less of widespread usability:

s-idn.c:
   Simple GNU Libidn based thing that encodes and decodes IDNs.
   Rather identical to the idn utility that comes with that one, but
   i needed to get comfortable with Libidn and so i've wrote it.

showkey.c:
   Show keyboard scancodes for FreeBSD, OpenBSD, NetBSD and Linux.
   This is not yet finished but for Linux.  But it should help to get
   you going.  (Unfortunately the BSDs are not so documented and i
   need to dig into the kernel sources to implement the missing pieces.)

backup.pl:
   My private backup script.  Simple (uses tar(1)), but does some stuff
   which i need for my work flow (backups data which is in local repo
   clones but not yet pushed to their "real" counterparts).

super-shutdown.c:
   Single setuid root BSD program to invoke /sbin/shutdown(8), either
   to reboot or to halt the system.
   You've been warned.

cdoc-freebsd.S:
   FreeBSD 5.3 x86 prog to open/close /dev/cdrom tray.  May work on
   newer ones, but haven't tried it in a while.  It had 416 object
   file bytes when everything was placed in ``.text`` (no .EH frames
   back then).

openbsd-changelog-plus.pl,
openbsd-changeset-plus.pl:
   Simple scripts to ease maintaining of OpenBSD plus.html entries.
