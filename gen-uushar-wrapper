#!/bin/sh
#@ gen-uushar-wrapper creates a shar(1)-like shell archive (but with
#@ uuencode(1)d content) of given files (read from STDIN and/or ARGV), that is
#@ itself executable.
#@ Execute it (the generated archive) to invoke any of the programs contained
#@ therein.  On the first run, the wrapper will create a hidden directory in
#@ your $TMPDIR to unpack the archive therein.
#
# Copyright (c) 2012 Steffen Daode Nurpmeso <sdaoden@users.sf.net>.
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

##  --  >8  --  8<  --  ##
ARGS=$@

printf "%s\n%s\n%s\n%s\n\n%s " \
	'Howdy howdy, jo-ho hooo!' \
	'So let us create an uuencoded shell archive of the given utilities.' \
	'Please answer the upcoming questions for this to work.' \
	'You can at any time interrupt with CTRL-C.' \
   'What should be the name of the wrapper:'
read CREATOR_PROG
if [ -f "$CREATOR_PROG.sh" ]; then
   echo >&2 "$CREATOR_PROG.sh already exists, bailing out."
   exit 1
elif [ x"$CREATOR_PROG" == x ]; then
   echo >&2 "Cannot use the empty string for that, bailing out."
   exit 1
fi
CREATOR_PROG="$CREATOR_PROG.sh"

printf "Yay, it'll be $CREATOR_PROG.\n\n%s\n%s [] " \
   "Is there any subcommand which should be called for '+'?" \
   "(As in: <$CREATOR_PROG + -arg1 -arg2> -> <XXX -arg1 -arg2>)?"
read CREATOR_DEFEXEC

printf "\n%s\n%s\n%s\n\t- " \
   "So, we'll then enter a loop to read the programs to include." \
   "Please note that the command may not contain an AT sign (@)." \
   "Please terminate your input by giving an empty line."
PROGS=
[ ${#ARGS} -ne 0 ] && set -- $ARGS
while :; do
   [ ${#ARGS} -ne 0 ] && \
      { i=$1; shift || break; :; } || \
      { read i; [ x"$i" == x ] && break; :; }
   if [ ! -x "$i" ]; then
      echo >&2 "$i does not exist or is not executable, bailing out."
      exit 1
   fi
   printf "$i: ok\n\t- "
   [ x"$PROGS" == x ] && PROGS=$i || PROGS="$PROGS@$i"
done

# Everything get.set.go, so write the actual shell archive
set -C
printf ".. end of list\nFine, so i'm doing my work now\n"
trap "rm -rf '$CREATOR_PROG'" 0

# Header
cat <<\! > "$CREATOR_PROG"
#!/bin/sh
#@ This file was automatically created by gen-uushar-wrapper, which is
# Copyright (c) 2012 Steffen Daode Nurpmeso <sdaoden@users.sf.net>.
#@ by means of the ISC license.

# The following executable files are contained in here (basename(1)d):
!

oifs=$IFS
IFS=@
set -- $PROGS
IFS=$oifs
for i; do
   printf "# - $i\n" >> "$CREATOR_PROG"
done

# A shell archive is not a transparent thing either!
printf "\nPROG=\"${CREATOR_PROG%.sh}\"\nDEFEXEC=\"$CREATOR_DEFEXEC\"\n" \
   >> "$CREATOR_PROG"
cat <<\! >> "$CREATOR_PROG"
MYDIR=".$PROG"

[ -d "$TMPDIR/$MYDIR" ] && {
   PATH="$TMPDIR/$MYDIR:$PATH"
   [ x"$1" == 'x+' ] && { shift; :; } || { DEFEXEC=$1; shift; }
   if [ ! -x "$DEFEXEC" ]; then
      echo >&2 "Sorry, this archive has no program '$DEFEXEC', bailing out"
      exit 54
   fi
   exec "$DEFEXEC" "$@"
   echo >&2 "Failed to execute <$DEFEXEC $@>"
   exit 1
}

printf "The directory\n\t$TMPDIR/$MYDIR\n%s\n" \
   'does not exist, creating it first, and exploding this shell archive.'
mkdir -p "$TMPDIR/$MYDIR" || {
   echo >&2 "Cannot create '$TMPDIR/$MYDIR' directory"
   exit 1
}
cd "$TMPDIR/$MYDIR" || {
   echo >&2 "Cannot enter $TMPDIR/$MYDIR to explode shell archive"
   exit 1
}

!

# uuencode(1)d the programs to embed
oifs=$IFS
IFS=@
set -- $PROGS
IFS=$oifs
for i; do
   basei=$(basename $i)
   printf "echo 'x - (%s as) %s'\nuudecode << \!\n" \
      "$i" "$basei" >> "$CREATOR_PROG"
   uuencode -m $i $basei >> "$CREATOR_PROG"
   printf "!\n# END of '$ uuencode -m $i $basei'\n" >> "$CREATOR_PROG"
done

printf "\necho '%s'\nexit 0\n" \
      'Shell archive exploded, please rerun the command, now for real..' \
   >> "$CREATOR_PROG"

# The end
chmod 0755 "$CREATOR_PROG"
trap - 0
exit 0
# vim:set fenc=utf-8 filetype=sh syntax=sh ts=3 sts=3 sw=3 et tw=79:
