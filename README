A repo of some small tools
==========================

Somewhat useful:

btrfs-snapshot.sh:
   Simple script to deal with BTRFS snapshots: create, trim, receive and
   setmounts are the actions which are provided.
   $THEVOL, $DIRS and $ACCUDIR have to be adjusted (maybe also $UNPRIVU
   and $UNPRIVG), then many mount points can be handled with one command.

entropy-saver.c:
   For my use cases i find it annoying that "entropy_avail" is not
   incremented when i restore the saved random seed that machines have
   collected so hard.  This little program touches this count also.

fancontrol.sh:
   A simple Linux fancontrol shell script, by default for MacBook Air,
   but can be adjusted easily by providing a $MODEL specific set.
   ..
   2018-12-01: Add another RPM level to accommodate better for power
               saving, and increase some sleeps.
   2018-12-02: MACBOOK_AIR_2011: adjust reduxone for additional level(s).
   2018-12-10: Oh!  The Linux hwmon* classification is not fixed but depends
               on kernel version etc.?  Be more tolerant and actively search
               for the files we expect under hwmon*/, bail out if we cannot
               (seem to) identify what we expect.

git-topic-creator.pl:
   To ease maintaining of topic branches i use a linear history, so
   that i can use ``$ git rebase -i`` for fixups and squashes, without
   having to worry about recreation of topic branches.  Instead i tag
   commit messages, and use this script to create the topics once i am
   finished.  Read the --help output for more, and make use of verbosity
   when you use it first.

   2013-09-13: newer git(1) reverse ``rev-parse`` output: adjusted.

gmane-fetch.pl:
   Download NNTP articles from Gmane.org and Gwene.org, incrementally, and
   store them in (append them to) a local MBOX.
   Read and adjust the script header for documentation and configuration.
   ...
   2017-07-24: add support for multiple servers and add gwene.org.

zte.sh:
   Control a ZTE modem (MF79 and many others according to web search)
   from the command line.  Needs curl(1) and OpenSSL(1).
   ..
   2018-12-26: "login" now asks until there is a password, but PASSWORD=
               could still be set to avoid that.

You likely do not wanna know:

arena-manager:
   Offers some automatized operations on revision control repositories,
   like updating, (fast-forward) merging, garbage-collecting.

backup.sh:
   My private backup script.  Simple (uses tar(1)), but does some stuff
   which i need for my work flow (backups data which is in local repo
   clones but not yet pushed to their "real" counterparts).  Needs perl(1).
   P.S.: it is fantastic to have a filesystem with snapshots thats can be
   "send" in addition!
   ...
   2016-08-27: FIX faulty xarg/tar -c invocations (Ralph Corderoy)
   ...
   2018-10-12: Fix $HOOK mechanism for filenames with spaces as shown by
               POSIX, assuming no newlines are in a name:
                  sed −e 's/"/"\\""/g' −e 's/.*/"&"/'
   2018-11-12: add -p option to tar.
   2018-11-13: change builtin path set.

cdoc-freebsd.S:
   FreeBSD 5.3 x86 prog to open/close /dev/cdrom tray.  May work on
   newer ones, but have not tried it in a while.  It had 416 object
   file bytes when everything was placed in ``.text`` (no .EH frames
   back then).

gen-uushar-wrapper:
   Creates a shell archive similar to uushar as below, except that the
   archive (1) consists only of executable file members, and (2) will
   be itself executable.  Run it (the generated shell archive script)
   to invoke any of the programs contained therein.  On the first run,
   the wrapper will create a hidden directory in your $TMPDIR to unpack
   the archive members therein.  Run without arguments to show its
   contents and the creation date.
   It needs no manual, simply execute it and it will guide you through
   the archive creation process.

   Note that the uudecode(1) program must be capable of decoding to
   /dev/stdout, i.e., it must be POSIX compliant (Issue 6 iirc).
   ...
   2016-01-05: port to FreeBSD: uudecode(1) does not honour /dev/stdout
               in-stream, so give -o command line option.

real-periodic.sh:
   A _real_ periodic for NetBSD, FreeBSD, DragonFly BSD and OpenBSD that
   ensures that the daily/weekly/monthly maintenance stuff is executed,
   even if your laptop is running only one hour a day.  Invoke this once
   per hour in the roots crontab and disable the usual periodic stuff of
   your system instead.  Note it does not deal with timezone and DST
   (daylight saving time) switches, but instead only checks the day of
   the year that is reported by date(1).  E.g., on my FreeBSD 10.0 box::

      # do daily/weekly/monthly maintenance
      15  * * * * root /usr/bin/nice -n 15 /usr/libexec/real-periodic.sh
      #1  3 * * * root periodic daily
      #15 4 * * 6 root periodic weekly
      #30 5 1 * * root periodic monthly
   ...
   2017-08-05: oh, fix the latter mess!  No more sleeps there, too?

uushar (manual in uushar.1):
   Writes a sh(1) shell script to the standard output which will
   recreate the file hierarchy specified by the command line operands.
   Directories will be recreated and must be specified before the files
   they contain.  Compared to the well-known shar(1) program, uushar(1)
   adds optional compression and an uuencode(1)/uudecode(1) binary
   safe layer::

      $ uushar [-(Z|z|J|j)] file ...

   It is easy to insert trojan horses into uushar files.  It is thus
   strongly recommended that all shell archive files be examined before
   running them through sh(1).  Archives produced using this
   implementation of uushar may be easily examined with the command::

      $ grep '^[^X#]' shar.file

   Note that the uudecode(1) program must be capable of decoding to
   /dev/stdout, i.e., it must be POSIX compliant (Issue 6 iirc).
   ...
   2016-01-05: port to FreeBSD: uudecode(1) does not honour /dev/stdout
               in-stream, so give -o command line option.
               mdocmx(7)ified++ manual.

# s-it-mode
