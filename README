A repo of some small tools
==========================

Somewhat useful:

fancontrol.sh:
   A simple fancontrol shell script for an MacBook Air.
   Can be adjusted to others, of course.
   2018-11-16: added signal traps for openrc integration.
   2018-11-18: add EXIT trap, a bit of cleanup.

gen-uushar-wrapper:
   Creates a shell archive similar to uushar as below, except that the
   archive (1) consists only of executable file members, and (2) will
   be itself executable.  Run it (the generated shell archive script)
   to invoke any of the programs contained therein.  On the first run,
   the wrapper will create a hidden directory in your $TMPDIR to unpack
   the archive members therein.  Run without arguments to show its
   contents and the creation date.
   It needs no manual, simply execute it and it will guide you through
   the archive creation process.

   Note that the uudecode(1) program must be capable of decoding to
   /dev/stdout, i.e., it must be POSIX compliant (Issue 6 iirc).

   2014-03-05: rewritten: check and forbid filenames with embedded
               double quotes, ensure the given default executable, if any,
               is part of the generated archive, reexecute after archive
               expansion, truly disallow empty archive name.
   2016-01-05: port to FreeBSD: uudecode(1) doesn't honour /dev/stdout
               in-stream, so give -o command line option.

git-topic-creator.pl:
   To ease maintaining of topic branches i use a linear history, so
   that i can use ``$ git rebase -i`` for fixups and squashes, without
   having to worry about recreation of topic branches.  Instead i tag
   commit messages, and use this script to create the topics once i'm
   finished.  Read the --help output for more, and make use of verbosity
   when you use it first.

   2013-09-13: newer git(1) reverse ``rev-parse`` output: adjusted.

gmane-fetch.pl:
   Download NNTP articles from Gmane.org and Gwene.org, incrementally, and
   store them in (append them to) a local MBOX.
   Read and adjust the script header for documentation and configuration.

   2017-06-17: ensure resource file is updated as necessary even when script
               dies due to failure.  Add $SAFE_FSYNC, default on.
   2017-07-24: add support for multiple servers and add gwene.org.

uushar (manual: uushar.1):
   Writes a sh(1) shell script to the standard output which will
   recreate the file hierarchy specified by the command line operands.
   Directories will be recreated and must be specified before the files
   they contain.  Compared to the well-known shar(1) program, uushar(1)
   adds optional compression and an uuencode(1)/uudecode(1) binary
   safe layer::

      $ uushar [-(Z|z|J|j)] file ...

   It is easy to insert trojan horses into uushar files.  It is thus
   strongly recommended that all shell archive files be examined before
   running them through sh(1).  Archives produced using this
   implementation of uushar may be easily examined with the command::

      $ grep '^[^X#]' shar.file

   Note that the uudecode(1) program must be capable of decoding to
   /dev/stdout, i.e., it must be POSIX compliant (Issue 6 iirc).

   2014-02-27: rewritten: short options, check and forbid filenames with
               embedded double quotes, added uushar.1 manual.
   2016-01-05: port to FreeBSD: uudecode(1) doesn't honour /dev/stdout
               in-stream, so give -o command line option.
               mdocmx(7)ified++ manual.

You likely do not wanna know:

arena-manager:
   Offers some automatized operations on revision control repositories,
   like updating, (fast-forward) merging, garbage-collecting.

backup.sh:
   My private backup script.  Simple (uses tar(1)), but does some stuff
   which i need for my work flow (backups data which is in local repo
   clones but not yet pushed to their "real" counterparts).  Needs perl(1).
   P.S.: it is fantastic to have a filesystem with snapshots thats can be
   "send" in addition!

   2015-09-02: no longer following symbolic links.
   2015-10-09: add -b/--basename option, add $COMPRESSOR variable, start
               via shell and $PERL5OPT clear to avoid multibyte problems.
   2015-12-25: excluding symbolic links from archives; change
               $SYMLINK_INCLUDE in the script header to change this.
   2016-08-27: FIX faulty xarg/tar -c invocations (Ralph Corderoy)
   2016-10-19: Renamed from backup.pl "now" that we start via sh(1).
   2016-10-19: Removed support for Mercurial: not tested in years.
   ..2017-06-12: Various little fixes still due to the xarg/tar stuff.
   2017-06-13,14: Add $HOOK mechanism, an alternative archiver approach.
   2018-10-12: Fix $HOOK mechanism for filenames with spaces as shown by
               POSIX, assuming no newlines are in a name:
                  sed −e 's/"/"\\""/g' −e 's/.*/"&"/'
   2018-11-12: add -p option to tar.
   2018-11-13: change builtin path set.

cdoc-freebsd.S:
   FreeBSD 5.3 x86 prog to open/close /dev/cdrom tray.  May work on
   newer ones, but haven't tried it in a while.  It had 416 object
   file bytes when everything was placed in ``.text`` (no .EH frames
   back then).

openbsd-changelog-plus.pl,
openbsd-changeset-plus.pl:
   Simple scripts to ease maintaining of OpenBSD plus.html entries.

real-periodic.sh:
   A _real_ periodic for NetBSD, FreeBSD, DragonFly BSD and OpenBSD that
   ensures that the daily/weekly/monthly maintenance stuff is executed,
   even if your laptop is running only one hour a day.  Invoke this once
   per hour in the roots crontab and disable the usual periodic stuff of
   your system instead.  Note it doesn't deal with timezone and DST
   (daylight saving time) switches, but instead only checks the day of
   the year that is reported by date(1).  E.g., on my FreeBSD 10.0 box::

      # do daily/weekly/monthly maintenance
      15  * * * * root /usr/bin/nice -n 15 /usr/libexec/real-periodic.sh
      #1  3 * * * root periodic daily
      #15 4 * * 6 root periodic weekly
      #30 5 1 * * root periodic monthly

   2015-08-24: newer periodic(8) sleep in between jobs, so update the DB
               before we start it!
   2017-08-05: oh, fix the latter mess!  No more sleeps there, too?

super-shutdown.c:
   Single setuid root BSD program to invoke /sbin/shutdown(8), either
   to reboot or to halt the system.
   You've been warned.

# s-it-mode
