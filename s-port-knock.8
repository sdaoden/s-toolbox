.\"@ s-port-knock - a simple port knock via SSH signatures.
.\"
.\" Copyright (c) 2024 Steffen Nurpmeso <steffen@sdaoden.eu>.
.\" SPDX-License-Identifier: ISC
.\"
.\" Permission to use, copy, modify, and/or distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.
.Dd July 19, 2024
.ds VV \\%v0.8.1
.ds XX \\%S-PORT-KNOCK
.ds Xx \\%S-port-knock
.ds xx \\%s-port-knock.sh
.
.Dt \*(XX 8
.Os
.
.
.Sh NAME
.Nm \*(Xx \%[\*(VV]
.Nd a simple port knock via SSH signatures
.
.
.Sh SYNOPSIS
.
.Nm \*(xx
.
.
.Sh DESCRIPTION
.
A simple port knock implementation.
It requires modern implementations of
.Xr openssl 1
and
.Xr ssh-keygen 1 ,
and also a suitable
.Xr sh 1 .
Please run \*(xx as above for a usage summary,
and the
.Sx EXAMPLE
below.
.
.Sh BIG FAT WARNING
.
This software MUST be protected by suitable firewall rules!
Any network packet sent to it causes a
.Xr sh 1 Ns
ell script to run!
For example the author uses this Linux firewall rule which effectively
allows only one packet per source address per minute
(and causes a hour-long block otherwise).
.
.Bd -literal -offset indent
# port_knock: input only server
if fwcore_has_i port_knock; then
  : ${FWCORE_PORT_KNOCK:?port_knock needs FWCORE_PORT_KNOCK}
  if ipaddr_split ap "${FWCORE_PORT_KNOCK}"; then
    add_rule -p udp --dport ${port} \e
      -m recent --name port_knock --set \e
      -m recent --name port_knock \e
        --rcheck --seconds 60 --reap --hitcount 2 \e
      -m recent --name alien_super --set -j DROP
    add_rule -p udp --dport ${port} -j f_m1
  fi
fi
.Ed
.
.Sh EXAMPLE
.
.Bd -literal
On servers:

\&. If the packets seems sane,
\&. the OpenSSL private key is used to decrypt the random key,
\&. the random key is used to decrypt the signature,
\&. the "ssh-keygen -Y" mechanism is used to find a principal for the
  signature in the "allowed signers" file.
\&. (If a $MAGIC string is required, the signature is also verified.)

\&. On any stage a failure causes the act_block() action,
\&. upon overall success the act_allow() action is applied.

  # cd /tmp/
  # $CC -o zt s-port-knock-bin.c

  # head -n1 ~/.ssh/authorized_keys > .Zpub1
  # { printf 'uid1 '; cat .Zpub1; } > .Zsigs
  # echo MAGIC= > .Z.rc

  # ./s-port-knock.sh create-server-key .Zk
  # PORT_KNOCK_BIN=./zt \e
    PORT_KNOCK_SHELL=/bin/bash PORT_KNOCK_RC=./.Z.rc \e
    ./s-port-knock.sh start-server -v 10000 s-port-knock.sh \e
      .Zk-pri.pem .Zsigs

On clients:

\&. Creates a signature for a SSH public key via "ssh-keygen -Y",
\&. (if a $MAGIC string is required, includes that in the signature),
\&. encrypts that with a random key,
\&. and encrypts the random key for a dedicated target server via an
  (its) OpenSSL public key,
\&. sends the resulting packet to that server,
\&. invokes the $PORT_KNOCK_RC act_sent() hook; if that does not return 0,
  the packet is sent again, etc.

  # cd /tmp/
  # PORT_KNOCK_BIN=./zt \e
    PORT_KNOCK_RC=./.Z.rc \e
    ./s-port-knock.sh knock localhost 10000 .Zk-pub.pem .Zpub1
.Ed
.
.
.Sh "SEE ALSO"
.
.Xr openssl 1 ,
.Xr ssh-keygen 1 .
.
.
.Sh AUTHORS
.
.An "Steffen Nurpmeso" Aq steffen@sdaoden.eu .
.
.\" s-ts-mode
