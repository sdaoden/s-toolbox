#!/bin/sh
#@ gen-uushar-wrapper creates a shar(1)-like shell archive (but with
#@ uuencode(1)d content) of given files, that is executable.
#@ Execute it (the generated archive) to invoke any of the programs contained
#@ therein.  On the first run, the wrapper will create a hidden directory in
#@ your $TMPDIR to unpack the archive therein.
#
# Copyright (c) 2012 Steffen Daode Nurpmeso <sdaoden@users.sf.net>.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 3. Neither the name of the author nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

##  --  >8  --  8<  --  ##
cat <<-EOT
   Howdy howdy, jo-ho hooo!
   So let's create an uuencoded shell archive of the utilities you specify.
   Please answer the upcoming questions for this to work.
   You can at any time interrupt with CTRL-C.

EOT

printf "What should be the name of the wrapper: "
read CREATOR_PROG
if [ -f "$CREATOR_PROG.sh" ]; then
   echo >&2 "$CREATOR_PROG.sh already exists, bailing out."
   exit 1
elif [ x"$CREATOR_PROG" == x ]; then
   echo >&2 "Cannot use the empty string for that, bailing out."
   exit 1
fi
CREATOR_PROG="$CREATOR_PROG.sh"

printf "Yay, it'll be $CREATOR_PROG.\n%s\n%s [] " \
   "Is there any subcommand which should be called for '+'?" \
   "(As in: <$CREATOR_PROG + -arg1 -arg2> -> <XXX -arg1 -arg2>)?"
read CREATOR_DEFEXEC

printf "\n%s\n%s\n%s\n\t- " \
   "So, we'll then enter a loop to read the programs to include." \
   "Please note that the command may not contain an AT sign (@)." \
   "Please terminate your input by giving an empty line."

PROGS=
while :; do
   read i
   [ x"$i" == x ] && break
   if [ ! -x "$i" ]; then
      echo >&2 "$i does not exist or is not executable, bailing out."
      exit 1
   fi
   printf "$i: ok\n\t - "
   [ x"$PROGS" == x ] && PROGS=$i || PROGS="$PROGS@$i"
done

trap "rm -rf '$CREATOR_PROG'" 0


set -C
cat <<\! > "$CREATOR_PROG"
#!/bin/sh
#@ This file was automatically created by gen-uushar-wrapper, which is
# Copyright (c) 2012 Steffen Daode Nurpmeso <sdaoden@users.sf.net>.
# All rights reserved.
#@ under the new 3-clause BSD license.

!

printf "PROG=\"${CREATOR_PROG%.sh}\"\nDEFEXEC=\"$CREATOR_DEFEXEC\"\n" \
   >> "$CREATOR_PROG"
cat <<\! >> "$CREATOR_PROG"

MYDIR=".$PROG"
WWD=
ARGS=$@

runner() {
   PATH="$TMPDIR/$MYDIR:$PATH"
   set -- $ARGS
   if [ x"$DEFEXEC" != x ]; then
      [ x"$1" == 'x+' ] && { shift; set -- "$DEFEXEC" $@; }
   fi
   if [ ! -x "$1" ]; then
      echo >&2 "Sorry, but this archive did not contain '$1', bailing out"
      exit 54
   fi
   exec $@
   echo >&2 "Failed to execute <$ARGS>"
   exit 1
}

pre_explode() {
   cat <<%
The directory
	$TMPDIR/$MYDIR
does not exist, creating it first, and exploding this shell archive.
%

   mkdir -p "$TMPDIR/$MYDIR" || {
      echo >&2 "Cannot create '$TMPDIR/$MYDIR' directory"
      exit 1
   }

   WWD=$(pwd)
   cd "$TMPDIR/$MYDIR" || {
      echo >&2 "Cannot enter $TMPDIR/$MYDIR to explode shell archive"
      exit 1
   }
}

post_explode() {
   echo Shell archive exploded, now running command..
   cd "$WWD" || {
      echo >&2 "Cannot reenter starting working directory '$WWD'"
      exit 1
   }
   runner
   exit 55
}

[ -d "$TMPDIR/$MYDIR" ] && runner

pre_explode
!

# 
oifs=$IFS
IFS=@
set -- $PROGS
IFS=$oifs
for i; do
   basei=$(basename $i)
   printf "echo 'x - (%s as) %s'\nuudecode << \!\n" \
      "$i" "$basei" >> "$CREATOR_PROG"
   uuencode -m $i $basei >> "$CREATOR_PROG"
   printf "!\n# END of '$ uuencode -m $i $basei'\n" >> "$CREATOR_PROG"
done

echo post_explode >> "$CREATOR_PROG"

chmod 0755 "$CREATOR_PROG"
trap "" 0
exit 0
# vim:set fenc=utf-8 filetype=sh syntax=sh ts=3 sts=3 sw=3 et tw=79:
