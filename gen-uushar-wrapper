#!/bin/sh
#@ gen-uushar-wrapper creates a shar(1)-like shell archive (but with
#@ uuencode(1)d content) of given files (read from STDIN and/or ARGV), that is
#@ itself executable.
#@ Execute it (the generated archive) to invoke any of the programs contained
#@ therein.  On the first run with arguments, the wrapper will create a hidden
#@ directory in your $TMPDIR to unpack the archive therein; without arguments
#@ it'll always print creation time and members shipped.
#@ Web: http://sdaoden.users.sourceforge.net/code.html;
#@      https://sourceforge.net/projects/s-toolbox
#@ Git: git.code.sf.net/p/s-toolbox/code
#
# Copyright (c) 2012 Steffen Daode Nurpmeso <sdaoden@users.sf.net>.
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

##  --  >8  --  8<  --  ##
ARGS=$@

printf "%s\n%s\n%s\n%s\n\n%s " \
   'Howdy howdy, jo-ho hooo!' \
   'So let us create an uuencoded shell archive of the given utilities.' \
   'Please answer the upcoming questions for this to work.' \
   'You can at any time interrupt with CTRL-C.' \
   'What should be the name of the wrapper:'
read ARCH
[ -f "$ARCH.sh" ] && {
   echo >&2 "$ARCH.sh already exists, bailing out."
   exit 1
}
[ -z "$ARCH" ] && {
   echo >&2 "Cannot use the empty string for that, bailing out."
   exit 1
}
ARCH="$ARCH.sh"

printf "Yay, it'll be %s.\n\n%s\n%s [] " \
   "$ARCH" "Is there any subcommand which should be called for '+'?" \
   "(As in: '\$ $ARCH + -arg1 -arg2' -> '\$ XXX -arg1 -arg2')?"
read ARCH_DEFEXEC

printf "\n%s\n%s [] " \
   'Members can be compressed via compress, gzip, bzip2 and xz.' \
   'Enter desired compressor or the empty string otherwise.'
read COMPRESS
[ ! -z "$COMPRESS" ] && {
   x_compress='compress -c -f'
   ux_compress='uncompress -c'
   x_gzip='gzip -c -f'
   ux_gzip='gunzip -c -f'
   x_bzip2='bzip2 --compress --stdout'
   ux_bzip2='bzip2 --decompress --stdout'
   x_xz='xz --compress --stdout'
   ux_xz='xz --decompress --stdout'

   eval cfun='$x_'"$COMPRESS"
   eval xfun='$ux_'"$COMPRESS"
   [ -z "$cfun" ] && {
      echo >&2 "Unsupported compression method: $COMPRESS"
      exit 1
   }
}

MEMBERS=''
printf "\n%s\n%s\n" \
   'So, we will then enter a loop to read the member programs to include.' \
   'An empty value will terminate your input.'
[ ${#ARGS} -ne 0 ] && set -- $ARGS
while :; do
   [ ${#ARGS} -ne 0 ] &&
      { i=$1; shift || break; printf "\t - "; :; } ||
      { printf "\t - "; read i; [ -z "$i" ] && break; }
   [ -x "$i" ] || {
      echo >&2 "$i does not exist or is not executable, bailing out."
      exit 1
   }
   [ -z "$MEMBERS" ] && MEMBERS="$i" || MEMBERS="$MEMBERS, $i"
   printf "$i: ok\n"
done

# Everything get.set.go, so write the actual shell archive
set -C
printf ".. end of list\nFine, so i'm doing my work now\n"
CREATION_DATE=$(date -u)

# Header
cat <<\! > "$ARCH"
#!/bin/sh -
#@ This file has been created by gen-uushar-wrapper, which is
# Copyright (c) 2012 Steffen Daode Nurpmeso <sdaoden@users.sf.net>.
#@ by means of the ISC license.
#@ It contains a shell-archive-execution-environment. ;}
#@ Run it, and it will tell you which executable files it contains.
#@ Run it with the name of such an executable, and it'll create a hidden
#@ directory in your $TMPDIR to expand the shipped executables.
#@ From then on, it'll redirect it's invocations to those programs.
#
#@ Archives produced using this implementation of gen-uushar-wrapper
#@ may be easily examined with the command:
#@    $ egrep -v '^[X#]' shell-archive

!

# It's indeed our $ARCH
trap "rm -rf '$ARCH'" 0

# A shell archive is not a transparent thing either!
printf "ARCHIVE='%s'\nCREATION_DATE='%s'\n" "${ARCH%.sh}" "$CREATION_DATE" \
   >> "$ARCH"
printf "MEMBERS='%s'\n# Default expansion (if \$1 is +):\nDEFEXEC='%s'\n" \
      "$MEMBERS" "$ARCH_DEFEXEC" \
   >> "$ARCH"
cat <<\! >> "$ARCH"
#
[ $# -eq 0 ] && {
   printf "Archive creation: %s\nMembers: %s\n" "$CREATION_DATE" "$MEMBERS"
   exit 0
}
#
i="$TMPDIR/.$ARCHIVE"
[ -d "$i" ] && {
   export PATH="$i:$PATH"
   [ x"$1" = 'x+' ] && { shift; :; } || { DEFEXEC=$1; shift; }
   i="$i/$DEFEXEC"
   if [ ! -f "$i" ] || [ ! -x "$i" ]; then
      echo >&2 "Sorry, this archive no program '$DEFEXEC', bailing out"
      exit 54
   fi
   exec "$i" "$@"
   echo >&2 "Failed to execute <$DEFEXEC $@>"
   exit 71 # 71=EX_OSERR
}
#
printf "The directory\n\t%s\n%s\n" \
   "$i" 'does not exist, creating it first, and expanding this shell archive.'
mkdir -p "$i" || {
   echo >&2 "Cannot create directory '$i'"
   exit 1
}
cd "$i" || {
   echo >&2 "Cannot chdir '$i' to expand shell archive"
   exit 1
}
#
!

# uuencode(1)d and optionally compress the members to embed
oifs=$IFS
IFS=', '
set -- $MEMBERS
IFS=$oifs
for i
do
   basei=$(basename "$i")
   printf "echo 'x - (%s as) %s'\n" "$i" "$basei" >> "$ARCH"
   if [ -z "$cfun" ]; then
      printf "sed 's/^X//' << \! | uudecode > \"%s\"; chmod 0755 \"%s\"\n" \
         "$basei" "$basei" >> "$ARCH"
      < "$i" uuencode -m /dev/stdout | sed 's/^/X/' >> "$ARCH"
   else
      printf \
         "sed 's/^X//' << \! | uudecode | %s > \"%s\"; chmod 0755 \"%s\"\n" \
         "$xfun" "$basei" "$basei" >> "$ARCH"
      < "$i" $cfun | uuencode -m /dev/stdout | sed 's/^/X/' >> "$ARCH"
   fi
   printf "!\n# END of %s\n" "$basei" >> "$ARCH"
done

printf "echo '%s'\nexit 0\n" \
      'Shell archive expanded, please rerun the command that took you here' \
   >> "$ARCH"

# The end
chmod 0755 "$ARCH"
trap - 0
exit 0
# vim:set fenc=utf-8 filetype=sh syntax=sh ts=3 sts=3 sw=3 et tw=79:
